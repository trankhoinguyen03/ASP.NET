@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "Total Tickets";
    Layout = "_LayoutAdmin";
}
@model CinemaBookingWeb.Models.OverviewModel
@using System.Text.Json

<link rel="stylesheet" href="~/css/css_overview.css" />

@{
    var startDate = ViewBag.StartDate as DateTime?;
    var endDate = ViewBag.EndDate as DateTime?;
}

<div>
    <h2>Chọn khoảng thời gian thống kê</h2>
    <form method="get" onsubmit="return validateDates()">
        <label for="startDate">Ngày bắt đầu:</label>
        <input type="date" id="startDate" name="startDate" value="@startDate?.ToString("yyyy-MM-dd")" onchange="validateDates()" />
        <br />
        <label for="endDate">Ngày kết thúc:</label>
        <input type="date" id="endDate" name="endDate" value="@endDate?.ToString("yyyy-MM-dd")" onchange="validateDates()" />

        <button type="submit">Lọc</button>
        <br />
        <span id="dateError" style="color: red; display: none;">Ngày bắt đầu phải nhỏ hơn ngày kết thúc.</span>
    </form>
</div>
<br />
<hr />
<div>
    <h2>Số lượng vé bán ra theo ngày</h2>
    @if (Model.TotalTicketsByDay != null && Model.TotalTicketsByDay.Any())
    {
        <canvas id="ticketsByDayChart" width="400" height="200"></canvas>
    }
    else
    {
        <p>Không có dữ liệu.</p>
    }

    <h2>Số lượng vé bán ra theo tháng</h2>
    @if (Model.TotalTicketsByMonth != null && Model.TotalTicketsByMonth.Any())
    {
        <canvas id="ticketsByMonthChart" width="400" height="200"></canvas>
    }
    else
    {
        <p>Không có dữ liệu.</p>
    }
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    // Kiểm tra ngày
    function validateDates() {
        const startDate = new Date(document.getElementById('startDate').value);
        const endDate = new Date(document.getElementById('endDate').value);
        const errorElement = document.getElementById('dateError');

        if (startDate && endDate && startDate >= endDate) {
            errorElement.style.display = 'inline';
            return false;
        } else {
            errorElement.style.display = 'none';
            return true;
        }
    }
    // Dữ liệu thống kê theo ngày
    var ticketsByDayLabels = @Html.Raw(JsonSerializer.Serialize(Model.TotalTicketsByDay.Select(x => x.Date.ToString("yyyy-MM-dd"))));
    var ticketsByDayData = @Html.Raw(JsonSerializer.Serialize(Model.TotalTicketsByDay.Select(x => x.Count)));

    var ctxDay = document.getElementById('ticketsByDayChart').getContext('2d');
    var ticketsByDayChart = new Chart(ctxDay, {
        type: 'bar',
        data: {
            labels: ticketsByDayLabels,
            datasets: [{
                label: 'Số lượng vé bán ra',
                data: ticketsByDayData,
                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                borderColor: 'rgba(75, 192, 192, 1)',
                borderWidth: 1,
                hoverBackgroundColor: 'rgba(75, 192, 192, 0.4)',
                hoverBorderColor: 'rgba(75, 192, 192, 1)',
            }]
        },
        options: {
            responsive: true,
            animation: {
                duration: 1000,
                easing: 'easeOutQuart'
            },
            scales: {
                y: {
                    beginAtZero: true,
                    ticks: {
                        stepSize: 1
                    }
                }
            }
        }
    });

    // Dữ liệu thống kê theo tháng
    var ticketsByMonthLabels = @Html.Raw(JsonSerializer.Serialize(Model.TotalTicketsByMonth.Select(x => x.Month.ToString("yyyy-MM"))));
    var ticketsByMonthData = @Html.Raw(JsonSerializer.Serialize(Model.TotalTicketsByMonth.Select(x => x.Count)));

    var ctxMonth = document.getElementById('ticketsByMonthChart').getContext('2d');
    var ticketsByMonthChart = new Chart(ctxMonth, {
        type: 'bar',
        data: {
            labels: ticketsByMonthLabels,
            datasets: [{
                label: 'Số lượng vé bán ra',
                data: ticketsByMonthData,
                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                borderColor: 'rgba(75, 192, 192, 1)',
                borderWidth: 1,
                hoverBackgroundColor: 'rgba(75, 192, 192, 0.4)',
                hoverBorderColor: 'rgba(75, 192, 192, 1)',
            }]
        },
        options: {
            responsive: true,
            animation: {
                duration: 1000,
                easing: 'easeOutQuart'
            },
            scales: {
                y: {
                    beginAtZero: true,
                    ticks: {
                        stepSize: 1
                    }
                }
            }
        }
    });
</script>
