@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "Movies Revenue";
    Layout = "_LayoutAdmin";
}
@model CinemaBookingWeb.Models.OverviewModel
@using System.Text.Json

<link rel="stylesheet" href="~/css/css_overview.css" />

@{
    var startDate = ViewBag.StartDate as DateTime?;
    var endDate = ViewBag.EndDate as DateTime?;
}

<div>
    <h2>Chọn khoảng thời gian thống kê</h2>
    <form method="get" onsubmit="return validateDates()">
        <label for="startDate">Ngày bắt đầu:</label>
        <input type="date" id="startDate" name="startDate" value="@startDate?.ToString("yyyy-MM-dd")" onchange="validateDates()" />
        <br />
        <label for="endDate">Ngày kết thúc:</label>
        <input type="date" id="endDate" name="endDate" value="@endDate?.ToString("yyyy-MM-dd")" onchange="validateDates()" />

        <button type="submit">Lọc</button>
        <br />
        <span id="dateError" style="color: red; display: none;">Ngày bắt đầu phải nhỏ hơn ngày kết thúc.</span>

        <hr />
        <div>
            <button onclick="exportChartToExcel()" class="btn btn-success" style="float: right;"><i class="bi bi-file-earmark-spreadsheet"></i> Xuất Excel</button>
        </div>
        <br />
        <br />
    </form>
</div>
<br />
<hr />
<div>
    <h2>Doanh thu của từng phim</h2>
    @if (Model.MoviesRevenue != null && Model.MoviesRevenue.Any())
    {
        <canvas id="moviesRevenueChart" width="400" height="200"></canvas>
    }
    else
    {
        <p>Không có dữ liệu.</p>
    }
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    function validateDates() {
        const startDate = new Date(document.getElementById('startDate').value);
        const endDate = new Date(document.getElementById('endDate').value);
        const errorElement = document.getElementById('dateError');

        if (startDate && endDate && startDate >= endDate) {
            errorElement.style.display = 'inline';
            return false;
        } else {
            errorElement.style.display = 'none';
            return true;
        }
    }

    var movieLabels = @Html.Raw(JsonSerializer.Serialize(Model.MoviesRevenue.Select(x => x.Name)));
    var movieData = @Html.Raw(JsonSerializer.Serialize(Model.MoviesRevenue.Select(x => x.Revenue)));

    var ctxMovie = document.getElementById('moviesRevenueChart').getContext('2d');
    var moviesRevenueChart = new Chart(ctxMovie, {
        type: 'bar',
        data: {
            labels: movieLabels,
            datasets: [{
                label: 'Doanh thu (VNĐ)',
                data: movieData,
                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                borderColor: 'rgba(75, 192, 192, 1)',
                borderWidth: 1,
                hoverBackgroundColor: 'rgba(75, 192, 192, 0.4)',
                hoverBorderColor: 'rgba(75, 192, 192, 1)',
            }]
        },
        options: {
            responsive: true,
            animation: {
                duration: 1000,
                easing: 'easeOutQuart'
            },
            scales: {
                x: {
                    ticks: {
                        autoSkip: false, 
                        maxRotation: 0, 
                        minRotation: 0 
                    } 
                },
                y: {
                    beginAtZero: true,
                    ticks: {
                        stepSize: 10000,
                        autoSkip: true
                    }
                }
            }
        }
    });
</script>
<script>
    function getChartData(chart) {
        return {
            labels: chart.data.labels,
            data: chart.data.datasets[0].data
        };
    }

    function exportChartToExcel() {
        // Lấy dữ liệu từ biểu đồ
        const revenueChartData = getChartData(moviesRevenueChart);

        // Thêm loading trạng thái để ngăn việc nhấn nút nhiều lần
        const button = document.querySelector(".btn.btn-success");
        button.disabled = true;
        button.textContent = "Đang xử lý...";

        // Gửi dữ liệu tới server
        fetch('/Overview/ExportChartDataToExcel_MoviesRevenue', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ revenueChartData })
        })
            .then(response => {
                if (response.ok) {
                    return response.blob();
                }
                throw new Error('Xuất file Excel thất bại!');
            })
            .then(blob => {
                const url = window.URL.createObjectURL(blob);
                const a = document.createElement('a');
                a.style.display = 'none';
                a.href = url;
                a.download = 'MoviesRevenue.xlsx';
                document.body.appendChild(a);
                a.click();
                window.URL.revokeObjectURL(url);
            })
            .catch(error => {
                console.error(error);
                alert("Đã xảy ra lỗi khi xuất Excel.");
            })
            .finally(() => {
                button.disabled = false;
                button.textContent = "Xuất Excel";
            });
    }
</script>
