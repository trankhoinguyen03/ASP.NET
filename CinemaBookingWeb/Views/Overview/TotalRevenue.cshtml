@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "Total Revenue";
    Layout = "_LayoutAdmin";
}
@model CinemaBookingWeb.Models.OverviewModel
@using System.Text.Json

<link rel="stylesheet" href="~/css/css_overview.css" />

@{
    var startDate = ViewBag.StartDate as DateTime?;
    var endDate = ViewBag.EndDate as DateTime?;
}

<div>
    <h2>Chọn khoảng thời gian thống kê</h2>
    <form method="get" onsubmit="return validateDates()">
        <label for="startDate">Ngày bắt đầu:</label>
        <input type="date" id="startDate" name="startDate" value="@startDate?.ToString("yyyy-MM-dd")" onchange="validateDates()" />
        <br />
        <label for="endDate">Ngày kết thúc:</label>
        <input type="date" id="endDate" name="endDate" value="@endDate?.ToString("yyyy-MM-dd")" onchange="validateDates()" />

        <button type="submit">Lọc</button>
        <br />
        <span id="dateError" style="color: red; display: none;">Ngày bắt đầu phải nhỏ hơn ngày kết thúc.</span>
    </form>
</div>
<br />
<hr />
<div>
    <h2>Tổng doanh thu theo ngày</h2>
    @if (Model.TotalRevenueByDay != null && Model.TotalRevenueByDay.Any())
    {
        <canvas id="revenueByDayChart" width="400" height="200"></canvas>
    }
    else
    {
        <p>Không có dữ liệu.</p>
    }

    <h2>Tổng doanh thu theo tháng</h2>
    @if (Model.TotalRevenueByMonth != null && Model.TotalRevenueByMonth.Any())
    {
        <canvas id="revenueByMonthChart" width="400" height="200"></canvas>
    }
    else
    {
        <p>Không có dữ liệu.</p>
    }
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    // Kiểm tra ngày
    function validateDates() {
        const startDate = new Date(document.getElementById('startDate').value);
        const endDate = new Date(document.getElementById('endDate').value);
        const errorElement = document.getElementById('dateError');

        if (startDate && endDate && startDate >= endDate) {
            errorElement.style.display = 'inline';
            return false;
        } else {
            errorElement.style.display = 'none';
            return true;
        }
    }

    // Dữ liệu doanh thu theo ngày
    var revenueByDayLabels = @Html.Raw(JsonSerializer.Serialize(Model.TotalRevenueByDay?.Select(x => x.Date.ToString("yyyy-MM-dd")) ?? new List<string>()));
    var revenueByDayData = @Html.Raw(JsonSerializer.Serialize(Model.TotalRevenueByDay.Select(x => x.Revenue)));
    // Tạo biểu đồ doanh thu theo ngày
    if (revenueByDayLabels.length > 0 && revenueByDayData.length > 0) {
        var ctxDay = document.getElementById('revenueByDayChart').getContext('2d');
        new Chart(ctxDay, {
            type: 'bar',
            data: {
                labels: revenueByDayLabels,
                datasets: [{
                    label: 'Doanh thu (VNĐ)',
                    data: revenueByDayData,
                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 1,
                    hoverBackgroundColor: 'rgba(75, 192, 192, 0.4)',
                    hoverBorderColor: 'rgba(75, 192, 192, 1)',
                }]
            },
            options: {
                responsive: true,
                animation: {
                    duration: 1000,
                    easing: 'easeOutQuart'
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            stepSize: 1
                        }
                    }
                }
            }
        });
    }

    // Dữ liệu doanh thu theo tháng
    var revenueByMonthLabels = @Html.Raw(JsonSerializer.Serialize(Model.TotalRevenueByMonth?.Select(x => x.Month.ToString("yyyy-MM")) ?? new List<string>()));
    var revenueByMonthData = @Html.Raw(JsonSerializer.Serialize(Model.TotalRevenueByMonth.Select(x => x.Revenue)));

    // Tạo biểu đồ doanh thu theo tháng
    if (revenueByMonthLabels.length > 0 && revenueByMonthData.length > 0) {
        var ctxMonth = document.getElementById('revenueByMonthChart').getContext('2d');
        new Chart(ctxMonth, {
            type: 'bar',
            data: {
                labels: revenueByMonthLabels,
                datasets: [{
                    label: 'Doanh thu (VNĐ)',
                    data: revenueByMonthData,
                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 1,
                    hoverBackgroundColor: 'rgba(75, 192, 192, 0.4)',
                    hoverBorderColor: 'rgba(75, 192, 192, 1)',
                }]
            },
            options: {
                responsive: true,
                animation: {
                    duration: 1000,
                    easing: 'easeOutQuart'
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            stepSize: 1
                        }
                    }
                }
            }
        });
    }
</script>

